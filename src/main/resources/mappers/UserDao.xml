<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cb.dao.UserDao">

    <resultMap id="BaseResultMap" type="com.cb.model.entity.User">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="mobile" jdbcType="VARCHAR" property="mobile" />
        <result column="nickname" jdbcType="VARCHAR" property="nickname" />
        <result column="available" jdbcType="BIT" property="available" />
        <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    </resultMap>

    <sql id="Base_Column_List">
        id, username,password,email,mobile,nickname,available,login_ip,create_time,update_time
    </sql>

    <sql id="user_key_filter">
        <trim suffixOverrides=",">
            <if test="username!=null and username!=''">
                username,
            </if>
            <if test="password!=null and password!=''">
                password,
            </if>
            email,
            mobile,
            nickname,
            <if test="available!=null">
                available,
            </if>
            <if test="loginIp!=null and loginIp!=''">
                login_ip,
            </if>
        </trim>
    </sql>
    <sql id="user_value_filter">
        <trim suffixOverrides=",">
            <if test="username!=null and username!=''">
                #{username},
            </if>
            <if test="password!=null and password!=''">
                #{password},
            </if>
            #{email},
            #{mobile},
            #{nickname},
            <if test="available!=null">
                #{available},
            </if>
            <if test="loginIp!=null and loginIp!=''">
                #{loginIp},
            </if>
        </trim>
    </sql>

    <!--获取指定id用户信息-->
    <select id="get" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM users u
        WHERE u.id = #{id}
    </select>

    <!--用户名查询用户-->
    <select id="findUserByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM users u
        WHERE u.username = #{username}
    </select>

    <!--返回所有-->
    <select id="findAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM sys_user u
        <choose>
            <otherwise>
                ORDER BY a.username ASC
            </otherwise>
        </choose>
    </select>

    <!--添加新用户-->
    <insert id="insert" parameterType="com.cb.model.entity.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO users (<include refid="user_key_filter"/>)
        VALUES (<include refid="user_value_filter"/>)
    </insert>

    <insert id="addRoletoUser" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user_role (user_id,role_id)
        VALUES (#{uid},#{rid})
    </insert>
    <update id="update" parameterType="com.cb.model.entity.User">
        UPDATE users
        <trim prefix="set" suffixOverrides=",">
            <if test="username!=null">username=#{username},</if>
            <if test="password!=null">password=#{password},</if>
            <if test="email!=null">email=#{email},</if>
            <if test="mobile!=null">mobile=#{mobile},</if>
            <if test="nickname!=null">nickname=#{nickname},</if>
            <if test="available!=null">available=#{available},</if>
            <if test="loginIp!=null">login_ip=#{loginIp},</if>
        </trim>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long[]">
        DELETE FROM users
        WHERE id IN
        <foreach collection="array" item="arr" index="no" open="("
                 separator="," close=")">
            #{ids}
        </foreach>
    </delete>

    <update id="changePassword" parameterType="com.cb.model.entity.User">
        UPDATE users SET
        password = #{password}
        WHERE id = #{id}
    </update>

    <select id="Authorization" parameterType="com.cb.model.entity.User" resultType="java.lang.Integer">
        SELECT
            COUNT(*)
        FROM users u
        WHERE au.username = #{username} AND u.password = #{password}
    </select>

    <!-- 根据用户ID查询权限 -->
    <select id="findAuthByUserId" resultType="com.cb.model.entity.Auth" parameterType="java.lang.Long">
        SELECT
        a.*
        FROM
        auths a
        LEFT JOIN role_auth ra ON ra.auth_id = a.id
        LEFT JOIN user_role ur ON ur.role_id = ra.role_id
        WHERE
        ur.user_id = #{id}
    </select>

    <select id="findRoleByUserId" resultType="com.cb.model.entity.Role" parameterType="java.lang.Long">
        SELECT
        r.*
        FROM
        roles r
        LEFT JOIN user_role ur ON ur.role_id = r.id
        WHERE
        ur.user_id = #{id}
    </select>
</mapper>
